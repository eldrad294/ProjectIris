@model ProjectIris.Models.account

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<!-- Main Content -->
<div class="container-fluid">
    <div class="side-body">
        <div class="page-title">
            <span class="title">Account Table</span>
            <div class="description">Remove account from list</div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="card">
                    <div class="card-header">
                        <div class="card-title">
                            <div class="title">Table</div>
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.clientid, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.clientid, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.clientid, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.accountnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.accountnumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.accountnumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*@Html.HiddenFor(model => model.accountnumber)*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.accounttype, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.accounttype, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <select class="form-control" name="accounttype">
                                            @foreach (var item in ViewBag.AccountTypes)
                                            {
                                                if (item == ViewBag.accounttype)
                                                {
                                                    <option selected>
                                                        @item
                                                    </option>
                                                }
                                                else
                                                {
                                                    <option>
                                                        @item
                                                    </option>
                                                }
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.accounttype, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.bank, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.bank, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <select class="form-control" name="bank">
                                            @foreach (var item in ViewBag.Banks)
                                            {
                                                if (item == ViewBag.bank)
                                                {
                                                    <option selected>
                                                        @item
                                                    </option>
                                                }
                                                else
                                                {
                                                    <option>
                                                        @item
                                                    </option>
                                                }
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.bank, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.swiftcode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.swiftcode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                                        <select id="swiftcode" class="form-control" name="swiftcode">
                                            @foreach (var item in ViewBag.SwiftCodes)
                                            {
                                                if (item == ViewBag.swiftcode)
                                                {
                                                    <option selected>
                                                        @item
                                                    </option>
                                                }
                                                else
                                                {
                                                    <option>
                                                        @item
                                                    </option>
                                                }
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.swiftcode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.iban, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.iban, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.iban, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.pin, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.pin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.pin, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
